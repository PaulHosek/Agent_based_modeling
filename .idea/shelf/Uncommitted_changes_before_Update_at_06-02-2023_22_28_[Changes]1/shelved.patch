Index: geo_model2.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/geo_model2.py b/geo_model2.py
--- a/geo_model2.py	
+++ b/geo_model2.py	
@@ -15,8 +15,8 @@
 
 
 class GeoModel(mesa.Model):
-    def __init__(self, cost_clean=.3, cost_dirty=.2, base_output_dirty=0.1, base_output_clean=0.1,
-                 metabolism_scalar_energy=1.5, metabolism_scalar_money=1, eta_global_trade=0.01,
+    def __init__(self, cost_clean=.85, cost_dirty=.25, base_output_dirty=0.7, base_output_clean=0.15,
+                 metabolism_scalar_energy=1.4, metabolism_scalar_money=1.5, eta_global_trade=0.018,
                  predisposition_decrease=0.000_1, pareto_optimal=False):
 
         # initialise global model parameters
@@ -483,7 +483,7 @@
 
     now = time.time()
     new = GeoModel()
-    new.run_model(300)
+    new.run_model(1500)
     print(time.time() - now)
     data = new.datacollector.get_model_vars_dataframe()
     # print(data)
@@ -495,7 +495,7 @@
     # print(a_data.pivot_table(values='Welfare', columns='AgentID', index='Step'))
     # print("w_energy")
     # print(df_by_country_e)
-
+    data["Welfare"].to_csv("w_noni")
     plt.figure()
     plt.title("energy")
     plt.plot(df_by_country_e, color='red', alpha =0.3)
Index: country2.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/country2.py b/country2.py
--- a/country2.py	
+++ b/country2.py	
@@ -8,7 +8,7 @@
 
 class Country(mg.GeoAgent):
     def __init__(self, unique_id, model, geometry, crs,
-                 m_energy=0.1, m_money=0.1, w_energy=0.01, w_money=0.01, predisposition_decrease=0.0001):
+                 m_energy=0.112, m_money=0.12, w_energy=0.015, w_money=0.019, predisposition_decrease=0.0001):
 
         """
         :param unique_id: Name of country
@@ -89,8 +89,8 @@
                 and self.cost_dirty > self.w_money - (self.w_money * 0.3):
             return
 
-        if self.build_neighbour_plant():
-            return
+        #if self.build_neighbour_plant():
+         #   return
 
         # print("COST", self.cost_clean, self.w_money)
 
@@ -266,9 +266,9 @@
 
     def kill_plant(self):
         # for plant in [self.nr_dirty, self.nr_clean]:
-        if 0.2 > np.random.random() and self.nr_dirty > 0:
+        if 0.8 > np.random.random() and self.nr_dirty > 0:
             self.nr_dirty -= 1
-        if 0.2 > np.random.random() and self.nr_clean > 0:
+        if 0.1 > np.random.random() and self.nr_clean > 0:
             self.nr_clean -= 1
 
     def reduce_pred(self):
